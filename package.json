{
  "name": "fiap-video-processing-monorepo",
  "version": "1.0.0",
  "description": "Sistema de Processamento de VÃ­deos - FIAP X",
  "private": true,
  "workspaces": [
    "apps/*",
    "libs/*"
  ],
  "scripts": {
    "build": "npm run build:shared && npm run build:user-service && npm run build:video-service",
    "build:shared": "nest build shared",
    "build:user-service": "nest build user-service",
    "build:video-service": "nest build video-service",
    "build:prod": "npm run build:shared:prod && npm run build:user-service:prod && npm run build:video-service:prod",
    "build:shared:prod": "nest build shared --webpack",
    "build:user-service:prod": "nest build user-service --webpack",
    "build:video-service:prod": "nest build video-service --webpack",
    "start": "concurrently \"npm run start:user-service\" \"npm run start:video-service\"",
    "start:dev": "concurrently \"npm run start:dev:user-service\" \"npm run start:dev:video-service\"",
    "start:debug": "concurrently \"npm run start:debug:user-service\" \"npm run start:debug:video-service\"",
    "start:prod": "concurrently \"npm run start:prod:user-service\" \"npm run start:prod:video-service\"",
    "start:user-service": "nest start user-service",
    "start:dev:user-service": "nest start user-service --watch",
    "start:debug:user-service": "nest start user-service --debug --watch",
    "start:prod:user-service": "node dist/apps/user-service/main",
    "start:video-service": "nest start video-service",
    "start:dev:video-service": "nest start video-service --watch",
    "start:debug:video-service": "nest start video-service --debug --watch",
    "start:prod:video-service": "node dist/apps/video-service/main",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:user-service": "jest --config ./apps/user-service/test/jest.json",
    "test:video-service": "jest --config ./apps/video-service/test/jest.json",
    "test:e2e:user-service": "jest --config ./apps/user-service/test/jest-e2e.json",
    "test:e2e:video-service": "jest --config ./apps/video-service/test/jest-e2e.json",
    "clean": "rimraf dist",
    "clean:user-service": "rimraf dist/apps/user-service",
    "clean:video-service": "rimraf dist/apps/video-service",
    "clean:shared": "rimraf dist/libs/shared",
    "prebuild": "npm run clean",
    "prebuild:user-service": "npm run clean:user-service",
    "prebuild:video-service": "npm run clean:video-service",
    "prebuild:shared": "npm run clean:shared",
    "docker:build": "npm run docker:build:user-service && npm run docker:build:video-service",
    "docker:build:user-service": "docker build -f apps/user-service/Dockerfile -t user-service .",
    "docker:build:video-service": "docker build -f apps/video-service/Dockerfile -t video-service .",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "db:migrate": "npm run db:migrate:user-service && npm run db:migrate:video-service",
    "db:migrate:user-service": "cd apps/user-service && npm run migration:run",
    "db:migrate:video-service": "cd apps/video-service && npm run migration:run",
    "db:seed": "npm run db:seed:user-service && npm run db:seed:video-service",
    "db:seed:user-service": "cd apps/user-service && npm run seed:run",
    "db:seed:video-service": "cd apps/video-service && npm run seed:run"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/microservices": "^10.0.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.0.0",
    "@nestjs/typeorm": "^10.0.0",
    "@nestjs/websockets": "^10.0.0",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.3",
    "archiver": "^7.0.1",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "dotenv": "^17.2.3",
    "fluent-ffmpeg": "^2.1.2",
    "jsonwebtoken": "^9.0.2",
    "multer": "^1.4.5-lts.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.11.3",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "socket.io": "^4.7.2",
    "typeorm": "^0.3.17",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.4.20",
    "@types/amqplib": "^0.10.6",
    "@types/bcryptjs": "^2.4.6",
    "@types/express": "^4.17.17",
    "@types/fluent-ffmpeg": "^2.1.21",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/multer": "^1.4.7",
    "@types/node": "^20.19.17",
    "@types/passport-jwt": "^3.0.13",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.2",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "^29.7.0",
    "prettier": "^3.6.2",
    "rimraf": "^5.0.1",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "^29.4.4",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2",
    "webpack": "^5.88.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapping": {
      "^@app/shared(|/.*)$": "<rootDir>/libs/shared/src/$1"
    },
    "moduleNameMapper": {
      "^@app/auth-lib(|/.*)$": "<rootDir>/libs/auth-lib/src/$1"
    }
  }
}

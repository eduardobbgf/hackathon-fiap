name: CI/CD Pipeline for Monorepo

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

env:
  REGISTRY: docker.io
  DOCKER_USERNAME: your-dockerhub-username
  USER_SERVICE_IMAGE_NAME: ${{ vars.DOCKER_USERNAME || 'your-dockerhub-username' }}/user-service
  VIDEO_SERVICE_IMAGE_NAME: ${{ vars.DOCKER_USERNAME || 'your-dockerhub-username' }}/video-service

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install --frozen-lockfile

      - name: Run linter
        run: npm run lint -- --format=stylish

      - name: Run tests
        run: npm run test

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push user-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            APP_NAME=user-service
          push: true
          tags: |
            ${{ env.USER_SERVICE_IMAGE_NAME }}:latest
            ${{ env.USER_SERVICE_IMAGE_NAME }}:${{ github.sha }}

      - name: Build and push video-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            APP_NAME=video-service
          push: true
          tags: |
            ${{ env.VIDEO_SERVICE_IMAGE_NAME }}:latest
            ${{ env.VIDEO_SERVICE_IMAGE_NAME }}:${{ github.sha }}

      - name: Logout from Docker Hub
        run: docker logout
